#!/bin/bash

# This bash script creates a virtual disk image with a MBR

# Usage instructions
if [ $# -ne 2 ]; then
    echo "Usage: $0 <virtual_disk_name> <build_directory>"
    exit 1
fi

# Create the build directory if it doesn't exist
mkdir -p "$2"

# Change to the build directory
cd "$2"

BLOCKSIZE=512
COUNT=4100
FS_COUNT=$(((COUNT - 3)/2))

P1OFFSET=1
P2OFFSET=$((FS_COUNT + P1OFFSET + 1))

# Create the FAT filesystem
mkfs.fat -C fat.img -S $BLOCKSIZE $FS_COUNT

# Create a file to act as a virtual disk
DISK_IMAGE="$1"
dd if=/dev/zero of=$DISK_IMAGE bs=$BLOCKSIZE count=$COUNT

# Create MBR partition table and two partitions
{
echo o # Create a new empty DOS partition table
echo n # Add a new partition
echo p # Primary partition
echo 1 # Partition number 1
echo $P1OFFSET  # First sector (Accept default: 1)
echo +$FS_COUNT # Last sector
echo n # Add a new partition
echo p # Primary partition
echo 2 # Partition number 2
echo $P2OFFSET  # First sector (Accept default: next available)
echo +$FS_COUNT # Last sector
echo w # Write changes
} | fdisk $DISK_IMAGE

# Display the partition table
fdisk -l $DISK_IMAGE

# Copy the FAT filesystem to the virtual disk

dd if=fat.img of=$DISK_IMAGE bs=$BLOCKSIZE seek=$P1OFFSET count=$FS_COUNT
dd if=fat.img of=$DISK_IMAGE bs=$BLOCKSIZE seek=$P2OFFSET count=$FS_COUNT
