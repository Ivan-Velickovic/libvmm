#!/bin/bash

# This bash script creates a virtual disk image with an MBR

# Usage instructions
if [ $# -ne 1 ]; then
    echo "Usage: $0 <virtual_disk_name>"
    exit 1
fi

DISK_IMAGE="$1"
BUILD_DIR=$(dirname $DISK_IMAGE)

BLOCKSIZE=512
# @ericc: This has to be multiple of 8
COUNT=4104

P1OFFSET=8

# @ericc: This ensures that both FAT filesystems are a multiple of 8 blocks
FS_COUNT=$(( (COUNT - P1OFFSET - 1) / 2 ))
FS_COUNT=$(( FS_COUNT / 8 * 8 ))
FS_COUNT_ADD=$(( FS_COUNT - 1 ))


P2OFFSET=$((FS_COUNT_ADD + P1OFFSET + 1))

# Create the FAT filesystem
mkfs.fat -C $BUILD_DIR/fat.img -S $BLOCKSIZE $FS_COUNT

# Create a file to act as a virtual disk
dd if=/dev/zero of=$DISK_IMAGE bs=$BLOCKSIZE count=$COUNT

# Create MBR partition table and two partitions
{
echo o # Create a new empty DOS partition table
echo n # Add a new partition
echo p # Primary partition
echo 1 # Partition number 1
echo $P1OFFSET  # First sector (Accept default: 1)
echo +$FS_COUNT_ADD # Last sector
echo n # Add a new partition
echo p # Primary partition
echo 2 # Partition number 2
echo $P2OFFSET  # First sector (Accept default: next available)
echo +$FS_COUNT_ADD # Last sector
echo w # Write changes
} | fdisk $DISK_IMAGE

# Display the partition table
fdisk -l $DISK_IMAGE

# Copy the FAT filesystem to the virtual disk

dd if=$BUILD_DIR/fat.img of=$DISK_IMAGE bs=$BLOCKSIZE seek=$P1OFFSET count=$FS_COUNT
dd if=$BUILD_DIR/fat.img of=$DISK_IMAGE bs=$BLOCKSIZE seek=$P2OFFSET count=$FS_COUNT
